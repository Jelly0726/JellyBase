apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
//用于方便调试性能问题的打印插件。给访法加上@DebugLog，就能输出该方法的调用参数，以及执行时间
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {
    //生产环境域名地址
    def API_DEV_HOST="\"driver.test.com\""
    //开发环境域名地址
    def API_DEBUG_HOST="\"driver.4000000144.com\""

    compileSdkVersion 29
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.jelly.jellybase"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 3
        versionName "1.0.3F" //versionName 包含"F"表示强制更新
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        multiDexEnabled true
        //vectorDrawables.useSupportLibrary = true//使你的app使用矢量图support library；
        // android {compileOptions.encoding = "GBK"}  //增加的内容，可以解决部署到设备上汉字显示乱码的问题
        externalNativeBuild {
            cmake {
//                cppFlags ""
//                abiFilters "armeabi", "armeabi-v7a", "x86",'mips'  //输出指定三种abi体系结构下的so库。
                cppFlags "-std=c++11 -frtti -fexceptions"
                //设置支持的SO库架构
                abiFilters  "armeabi-v7a", "x86", "arm64-v8a"  //输出指定三种abi体系结构下的so库。
            }
        }
        //ndk编译生成.so文件
        ndk { //高德地图设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
//            moduleName "testjni"         //生成的so名字
            abiFilters  "armeabi-v7a", "x86" , "arm64-v8a"//输出指定三种abi体系结构下的so库。
//            //极光推送选择要添加的对应cpu类型的.so库。
//            //abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a','arm64-v8a','x86', 'x86_64', 'mips', 'mips64'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        //极光推送
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "你的appkey", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        //Android Studio 内置一个名为 Vector Asset Studio 的工具，在低版本SDK上编译APK期间，
        // 针对VectorDrawable脚本自动生成一组PNG位图资源BitmapDrawable，取代矢量图形（在5.0及以后的手机上运行时会正常引用VectorDrawable）。
        vectorDrawables.generatedDensities = ['hdpi', 'xxhdpi']
        vectorDrawables.useSupportLibrary = true
        /*
        兼容包在矢量资源引用、代码调用时，存在一定限制
        在 ImageView 等引用 VectorDrawable 资源时，需要使用app:srcCompat取代android:src
        代码中使用setImageResource()指定资源 id 时，无需更改代码
        将 VectorDrawable 用于 View 背景时，需要通过以下代码设定：
        Resources resources = context.getResources(Resources, int, Theme);
        Theme theme = context.getTheme();
        Drawable drawable = VectorDrawableCompat.create(resources, R.drawable.vector_drawable, theme);
        view.setBackground(drawable);
        代码中需要进行Drawable的实现类型转换时，可使用以下代码段执行：

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            VectorDrawable vectorDrawable =  (VectorDrawable) drawable;
        } else {
            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
        }

        创建好的 VectorDrawable 动画资源，需要通过代码方式加载到 View 容器内，并指定执行动画

        使用原生支持的代码设定（5.0 LOLLIPOP, API 21）
        ImageView imageView = (ImageView) findViewById(R.id.imageView);
        AnimatedVectorDrawable vectorDrawable = (AnimatedVectorDrawable) getResources().getDrawable(AnimatedVectorDrawableRes, Theme);
        imageView.setImageDrawable(vectorDrawable);
        vectorDrawable.start();
        使用 Support Library 时的动画设置
        矢量动画要求最低SDK为Android 3.0，并且不支持<path>路径类型的变换

        ImageView imageView = (ImageView) findViewById(R.id.imageView);
        AnimatedVectorDrawableCompat drawableCompat = AnimatedVectorDrawableCompat.create(context, AnimatedVectorDrawableRes);
        imageView.setImageDrawable(drawableCompat);
        drawableCompat.start();
        * */
        resConfig 'en'
    }
    signingConfigs {
        release {
            storeFile file("Jelly.jks")
            storePassword "1207qw"
            keyAlias "jelly"
            keyPassword "1207qw"
            //v1SigningEnabled false
            // v2SigningEnabled false
        }
        debug {
            storeFile file("Jelly.jks")
            storePassword "1207qw"
            keyAlias "jelly"
            keyPassword "1207qw"
            //v1SigningEnabled false
            // v2SigningEnabled false
        }
    }
    sourceSets {
        main {
//            jniLibs.srcDirs = ['alley\\lib']
            //接入高德地图语音时so文件放在jniLibs 无法识别
            //liblbs.so 为腾讯TBS需要的so文件
            //libocr-sdk.so 为百度文字识别需要的so文件
            //libAMapSDK_NAVI_v7_5_0.so libmsc.so libneonuijni.so 为高德需要的so文件
            // libcrypto.so libssl.so 为加密需要的so文件
            jniLibs.srcDirs=['libs']
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "IS_MUST_LOGIN", "false"//是否必须登录
            buildConfigField "boolean", "LOG_DEBUG", "true"//是否输出LOG信息
            buildConfigField "boolean", "SEND_ERR", "true"//是否发送崩溃信息
            buildConfigField "String", "API_HOST", "${API_DEBUG_HOST}"//开发环境域名地址
            signingConfig signingConfigs.debug
            // 移除无用的resource文件
            shrinkResources false
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles 'proguard-project.txt'
            //自定义导出apk文件名
            applicationVariants.all { variant ->
                variant.outputs.all { output ->  // each 改为 all
                    def fileName = "V${variant.versionName}_debug.apk"
                    def outFile = output.outputFile
                    if (outFile != null && outFile.name.endsWith('.apk')) {
                        outputFileName = fileName  //  output.outputFile 改为 outputFileName
                    }
                }
            }
        }
        release {
            buildConfigField "boolean", "IS_MUST_LOGIN", "false"//是否必须登录
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "SEND_ERR", "true"//是否发送崩溃信息
            buildConfigField "String", "API_HOST", "${API_DEV_HOST}"//生产环境域名地址
            signingConfig signingConfigs.release
            // 移除无用的resource文件
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles 'proguard-project.txt'
            //自定义导出apk文件名
            applicationVariants.all { variant ->
                variant.outputs.all { output ->  // each 改为 all
                    def fileName = "V${variant.versionName}_release.apk"
                    def outFile = output.outputFile
                    if (outFile != null && outFile.name.endsWith('.apk')) {
                        outputFileName = fileName  //  output.outputFile 改为 outputFileName
                    }
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
//解决加android:extractNativeLibs="false" 会导致加固后不能安装 的问题
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/armeabi/*.so"
        doNotStrip "*/armeabi-v7a/*.so"
        doNotStrip "*/x86/*.so"
        doNotStrip "*/mips/*.so"
//        doNotStrip "*/mips64/*.so"
//        doNotStrip "*/x86_64/*.so"
    }
//    dexOptions {
//        //jumboMode= true
//        incremental true
//        javaMaxHeapSize "4g"
//    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    ndkVersion "21.0.6352462"
    aaptOptions {
        //采用低版本构建生成PNG图片的兼容方式；
        //additionalParameters "--no-version-vectors"
    }
    //cmake，全新定义cmake脚本
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
//ndk-build,已有Android.mk
//    externalNativeBuild {
//        ndkBuild {
//            path 'src/main/jni/Android.mk'
//        }
//    }
//ndk-build,有多个项目多个Android.mk,指向总脚本Android-config.mk
//        externalNativeBuild {
//            ndkBuild {
//                path 'Android-config.mk'
//            }
//        }
    //kotlin Parcelize传值
    androidExtensions {
        experimental = true
    }
}
//greendao配置
greendao {
    schemaVersion 1//版本号，升级时可配置
    daoPackage 'systemdb' //包名
    targetGenDir 'src/main/java' //生成目录
}
//导入智能更新 SDK 的 AAR 文件
repositories {
    flatDir {
        dirs 'libs'
    }
    dependencies {

        //百度智能更新 SDK 的 AAR 文件
        implementation(name: 'autoupdatesdk-release', ext: 'aar')
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.core:core-ktx:1.2.0'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        //屏幕适配
        implementation 'me.jessyan:autosize:1.2.1'
//      kotlin协程
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
        implementation "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$kotlin_version"
        //recyclerview
        implementation 'androidx.recyclerview:recyclerview:1.0.0'
        implementation 'com.google.android.material:material:1.0.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

        //butterknife注解式绑定id  androidx 10.0.0
        implementation 'com.jakewharton:butterknife:8.8.1'
        annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
        //butterknife注解式绑定id kotlin
        kapt 'com.jakewharton:butterknife-compiler:8.8.1'

        //多进程数据共享SharedPreferences
        implementation 'net.grandcentrix.tray:tray:0.12.0'

        //
//        compile 'xiaofei.library:hermes-eventbus:0.3.0'
        implementation 'org.greenrobot:eventbus:3.1.1'
        //okhttp
        implementation 'com.squareup.okhttp3:okhttp:3.12.1'

        //RxLifecycle库通过绑定生命周期的方式，来解决Retrofit2内存泄漏的问题。
        implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'

        //Retrofit
        implementation 'com.squareup.retrofit2:retrofit:2.5.0'

        //Retrofit2所需要的包
        implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

        //ConverterFactory的Gson依赖包
        implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'

        //ConverterFactory的String依赖包
        implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

        //添加Retrofit对Rxjava的支持
        implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

        //RxJava
        implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
        implementation 'io.reactivex.rxjava2:rxjava:2.2.2'

        //JSON解析
        implementation 'com.alibaba:fastjson:1.1.55.android'

        //时间和地址选择器
//        implementation('cn.qqtheme.framework:WheelPicker:1.5.5') {
//            exclude group: 'com.android.support'
//        }
        //时间和地址选择器 示例 AndroidPicker-master
        implementation project(path:':library:Common')
        implementation project(path:':library:WheelPicker')
        //文件选择器 示例 AndroidPicker-master
        implementation project(path:':library:FilePicker')
        //颜色选择器 示例 AndroidPicker-master
        implementation project(path:':library:ColorPicker')
        //多级选择器 示例 AndroidPicker-master
        implementation project(path:':library:MultiplePicker')

        //高德地图so及jar

        //3D地图

        //implementation 'com.amap.api:3dmap:latest.integration'

        //    implementation 'com.amap.api:3dmap:6.5.0'

        //定位功能

        //    implementation 'com.amap.api:location:latest.integration'
//        implementation 'com.amap.api:location:5.0.0'
        implementation files('libs/AMap_Location_V5.0.0_20200609.jar')

        //搜索功能
        //    implementation 'com.amap.api:search:latest.integration'
//        implementation 'com.amap.api:search:7.3.0'
        implementation files('libs/AMap_Search_V7.3.0_20200331.jar')

        //导航
//        implementation 'com.amap.api:navi-3dmap:latest.integration'
//        implementation 'com.amap.api:navi-3dmap:7.5.0'
        implementation files('libs/AMap3DMap_7.5.0_AMapNavi_7.5.0_20200610.jar')

        //极光推送
        implementation 'cn.jiguang.sdk:jpush:3.1.8'
        implementation 'cn.jiguang.sdk:jcore:1.2.6'

        //sqlite框架greendao
        implementation 'org.greenrobot:greendao:3.2.2'

        // 数据库加密时添加

        //compile 'net.zetetic:android-database-sqlcipher:3.5.1'

        // 使用数据库升级辅助GreenDaoUpgradeHelper时添加

        //compile 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v1.2.0'

        //multidex
        implementation 'com.android.support:multidex:1.0.1'

        //glide图片加载库
        implementation 'com.github.bumptech.glide:glide:3.7.0'

        //微信支付
        implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

        //QQ、微信、微博登陆和分享
        implementation('com.github.arvinljw:SocialHelper:v1.2.2') {
            exclude group: 'com.android.support'
        }

        //微博

        //compile 'com.sina.weibo.sdk:core:4.1.0:openDefaultRelease@aar'

        //星级评价
        implementation 'com.github.ome450901:SimpleRatingBar:1.3.4'

        //图片选择
        implementation 'com.yanzhenjie:album:2.0.2'
//        compile ('com.yanzhenjie:album:2.1.0'){
////        exclude group: 'com.github.bumptech.glide'
////        exclude group:'com.android.support'
//        }

        //ProgressDialog
        implementation 'com.github.maning0303:MNProgressHUD:V1.1.8'

        //检查版本
        implementation 'com.allenliu.versionchecklib:library:2.0.8'

        //Android平台下的富文本解析器，支持Html和Markdown
        implementation 'com.zzhoujay.richtext:richtext:3.0.7'// latest-version  3.0.4
        implementation 'com.zzhoujay:html:1.0.2'//latest-version
        //Android平台下的富文本编辑器
        implementation project(path: ':library:htmlEditor')

        //Android图表视图/图形视图库
        implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
        implementation files('libs/tbs_sdk_thirdapp_v3.5.0.1004_43500.jar')

        //RecyclerView侧滑菜单
        implementation 'com.yanzhenjie:recyclerview-swipe:1.1.4'

        //权限申请
        implementation 'com.yanzhenjie.permission:support:2.0.1'

        //Java加密解密所需工具
        implementation 'org.bouncycastle:bcprov-jdk15on:1.59'

        //视频播放器gsyVideoPlayer
        implementation('com.shuyu:gsyVideoPlayer-java:5.0.0-beta') {
            exclude group: 'com.android.support'
        }
        implementation('com.shuyu:gsyVideoPlayer-ex_so:5.0.0-beta') {
            exclude group: 'com.android.support'
        }
        //广告轮播
//        implementation 'cn.bingoogolapple:bga-banner:2.2.5@aar'
        //腾讯tbs
//        api 'com.tencent.tbs.tbssdk:sdk:43697'
        implementation files('libs/zxing-core-3.3.1.jar')
        implementation 'com.haibin:calendarview:3.6.4'//日历选择
        //百度文字识别(身份证、银行卡等)
        implementation files('libs/ocr-sdk.jar')
        implementation project(path: ':ocr_ui')
        implementation project(path: ':logreport')
        implementation project(path: ':form')
        implementation project(path: ':LiveDataBus')
        //弹窗对话框
        implementation project(path: ':library:circleDialog')
        //应用宝自动升级
        implementation files('libs/tmassistantsdk_selfupdate-jce_3.0.1_33_20180123101008.jar')
        implementation files('libs/commons-codec-1.11.jar')
        implementation files('libs/commons-io-2.6.jar')
        implementation files('libs/commons-logging-1.2.jar')
        implementation 'me.jessyan:autosize:1.1.2'//屏幕适配
        implementation project(path: ':blurkit')
        implementation project(path: ':WebSocketClient')
        //简单的表格控件
        implementation project(path: ':library:tableLayout')
        //检测当前运行环境
        implementation project(path: ':library:anti_emulator')
        //设置角标
        implementation project(path: ':library:ShortcutBadger')
//        implementation files('libs/libss/email-activation.jar')//logreport里已包含，备份到libss里
//        implementation files('libs/libss/email-additionnal.jar')//logreport里已包含，备份到libss里
//        implementation files('libs/libss/email-mail.jar')//logreport里已包含，备份到libss里
        implementation files('libs/ksoap2-android-assembly-3.3.0-jar-with-dependencies.jar')

    }
}